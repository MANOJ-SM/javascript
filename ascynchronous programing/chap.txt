

in regualr prming only one piece of code is executed at a time 

js is single threaded synchronous language :

--> it executes one line of code at a time and one by one line 

console.log("hi");
console.log("hello");
comsole.log("bye");


---------------
asynchronous progming : Asynchronous programming is a programming that allows tasks to run concurrently without waiting for other tasks to complete 


 asynchronous functions : setTimeout , featch ...
---------------------------------------------------


setTimeout (webAPI) provided by browser:
------------

setTimeout is the webAPi which allows to execute some pieceof code after some delay 

1000ms = 1 sec 

setTimeout( "() => {             " inside the doublee qts " whatever is there , it is call back function 
                                                    bcoz it is passed inside another( setTimeout) function 
}",1000);


ex:
------
console.log("manu");

setTimeout( () => {    
    console.log("hello world!");        
},1000);

console.log("manoj");
console.log("manoj");
console.log("manoj");
console.log("manoj");
console.log("manoj");
console.log("manoj");

output:
-------
manu
manoj
manoj
manoj
manoj
manoj
manoj
hello world!

---------------
Note :

1. in case of multiple setTimeout the least time (delay) will executed one after the other 1000 is executed first and 2000 will execute second after 1000 is completed 

2. in case of same time dealy the one which is written first will be excuted first 

-----------------------------------
Event Loop : 

what happened in the above code is when it sees the callback function with some dely it dosent wait for that and excute it , it just skips it and runs rest of code and later come back to this call back function and execute this 

when event loop sees call back function  with dealy ,the same code will be pushed to the browers  with webApi setTimeout which will have timer in it  executes it and pushes it to the call back queue , and then, when  all the rest of code is executed (empty call stack ) , this code in  "call back queue" is pushed  to call stack , and then it executes with its delay 
---------------------------------------------
Note :
js is synchronous or asynchronous language ?

js is synchronous language but in case of any use of callback , promises or event loops it will behave as asynchronous ;


---------------------------

call back queue : when event loop sees call back function  with dealy ,the same code will be pushed to the browers  with webApi setTimeout which will have timer in it  executes it and pushes it to the call back queue , and then, when  all the rest of code is executed (empty call stack ) , this code in  "call back queue" is pushed to call stack  , and then it executes with its delay .


Micro Task queue (API calls and promises goes inside M T queue):
--------------------

similar to call back queue diiff is ,

when we use the featch API which is also time taking , js will push that featch function to browser and after some time of its dealy its executed and pusshed to micro task queue

this micro Task queue has higher prioprity then call back queue 

so event loops goes or picks code in the M T queue and put in the call stack for execution 


// imp interview qtn 

1. what is event loop or  how it works 
2.what is call back queue or Micro Task queue
3.which items goes into the c b queue or which items goes into the M T queue 
4. set of code line with setTimout and  fetch like functions and ask the output order ( M T queue > C B queue )


// callback :

a function which is passed as an argument to another function 

